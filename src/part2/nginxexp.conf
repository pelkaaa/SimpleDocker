

# Устанавливает пользователя, от имени которого будет работать процесс Nginx.
    user  nginx;
# Определяет количество рабочих процессов (worker processes), которые будут обрабатывать соединения. Здесь используется значение auto, что означает автоматическое определение количества процессов в зависимости от доступных ядер процессора.    
worker_processes  auto;
# Задает файл журнала для записи сообщений об ошибках. Уровень логирования установлен в notice, что означает запись только важных уведомлений.
error_log  /var/log/nginx/error.log notice;
#  Указывает путь к файлу, в котором будет сохранен идентификатор процесса (PID) главного процесса Nginx.
pid        /var/run/nginx.pid;

# Блок настроек для обработки событий. Здесь устанавливается максимальное количество одновременных соединений (worker_connections) на один рабочий процесс.
events {
    worker_connections  1024;
}

# Блок настроек для обработки HTTP-запросов.
http {
#  Подключает файл с MIME-типами, который содержит информацию о типах файлов и их ассоциациях с типами контента.    
    include       /etc/nginx/mime.types;
#  Устанавливает MIME-тип по умолчанию для файлов, если тип не может быть определен.    
    default_type  application/octet-stream;
# Определяет формат журнала доступа. В данном случае, используется формат main, который содержит различные переменные, такие как IP-адрес, пользователь, время запроса и другие.
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
#  Устанавливает файл и формат для журнала доступа.
    access_log  /var/log/nginx/access.log  main;
# Включает использование системного вызова sendfile для эффективной передачи файлов.
    sendfile        on;
# Это директива, которая управляет использованием опции TCP_NOPUSH в операционной системе. Эта опция влияет на передачу данных через сетевое соединение. Может использоваться для изменения поведения передачи данных.    
    #tcp_nopush     on;
# Устанавливает таймаут для keep-alive соединений.
    keepalive_timeout  65;
#  Это модуль сжатия данных в Nginx, который позволяет сжимать содержимое, отправляемое клиенту, с целью уменьшения объема передаваемых данных по сети и улучшения производительности. Nginx будет автоматически сжимать содержимое ответов перед отправкой их клиенту, при условии, что клиент поддерживает gzip. 
    #gzip  on;
#  Включает дополнительные конфигурационные файлы из директории.
    #include /etc/nginx/conf.d/*.conf;
# Этот блок начинается и определяет конфигурацию для одного веб-сервера.
        server {
#  Указывает, что сервер будет слушать порт 80.            
    	listen 80;
# Этот блок определяет настройки для обработки запросов к пути /status.        
	    location /status {
# Включает модуль, предоставляющий статусную информацию о работе сервера.            
	        stub_status on;
	    }
    }
}
